on: [push, pull_request]
name: Test
jobs:
  test:
    strategy:
      matrix:
        go-version: [1.15.x]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Install dart-sass-embedded Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        curl -LJO https://github.com/sass/dart-sass-embedded/releases/download/1.0.0-beta.6/sass_embedded-1.0.0-beta.6-linux-x64.tar.gz;
        tar -xvf sass_embedded-1.0.0-beta.6-linux-x64.tar.gz;
        echo "DART_SASS_EMBEDDED_BINARY=$GITHUB_WORKSPACE/sass_embedded/dart-sass-embedded" >> $GITHUB_ENV
    - name: Install dart-sass-embedded MacOS
      if: matrix.os == 'macos-latest'
      run: |
        curl -LJO https://github.com/sass/dart-sass-embedded/releases/download/1.0.0-beta.6/sass_embedded-1.0.0-beta.6-macos-x64.tar.gz;
        tar -xvf sass_embedded-1.0.0-beta.6-macos-x64.tar.gz;
        echo "DART_SASS_EMBEDDED_BINARY=$GITHUB_WORKSPACE/sass_embedded/dart-sass-embedded" >> $GITHUB_ENV
    - name: Install dart-sass-embedded Windows
      if: matrix.os == 'windows-latest'
      run: |
        curl -LJO https://github.com/sass/dart-sass-embedded/releases/download/1.0.0-beta.6/sass_embedded-1.0.0-beta.6-windows-x64.zip;
        unzip sass_embedded-1.0.0-beta.6-windows-x64.zip;
        echo  "DART_SASS_EMBEDDED_BINARY=$env:GITHUB_WORKSPACE/sass_embedded/dart-sass-embedded.bat" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
    - name: Test
      run: go test -race . -coverprofile=coverage.txt -covermode=atomic
    - name: Upload coverage
      if: success() && matrix.os == 'ubuntu-latest'
      run: |
        curl -s https://codecov.io/bash | bash
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      shell: bash